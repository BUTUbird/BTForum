<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.butu.mapper.PostMapper">

    <select id="selectListAndPage" resultType="org.butu.model.vo.PostVO">
        SELECT
        t.id,t.title,t.user_id,t.comments,
        t.view,t.collects,t.top,t.essence,
        t.create_time ,t.modify_time ,
        u.username,u.alias, u.avatar
        FROM bt_post t
        LEFT JOIN bt_user u
        ON t.user_id = u.id
        <where>
            <if test="tab == 'hot'">
                date(t.create_time) &lt;= date_add(curdate(), interval 1 day)
                and date(t.create_time) &gt;= date_sub(curdate(), interval 7 day)
            </if>
        </where>
        <if test="tab != 'hot'">
            order by t.create_time desc
        </if>
        <if test="tab == 'hot'">
            order by t.view desc, t.create_time desc
        </if>
    </select>


    <select id="selectRecommend" resultType="org.butu.model.entity.Post" parameterType="java.lang.String">
        select *
        from bt_post t
        where t.id != #{id}
        order by rand(), t.view
            limit 10
    </select>
    <select id="searchByKey" resultType="org.butu.model.vo.PostVO">
        SELECT t.id,
        t.title,
        t.user_id,
        t.comments,
        t.view,
        t.collects,
        t.top,
        t.essence,
        t.create_time,
        t.modify_time,
        u.username,
        u.alias,
        u.avatar
        FROM bt_post t
        LEFT JOIN bt_user u
        ON t.user_id = u.id
        <where>
            <if test="keyword!=null">
                and t.title like CONCAT('%','${keyword}')
                or t.title like CONCAT('${keyword}','%')
                or t.title like CONCAT('%','${keyword}','%')
                or t.title = #{keyword}
            </if>
        </where>
        order by t.view desc, t.create_time desc
    </select>
    <select id="getHotList" resultType="org.butu.model.vo.ViewVO">
        ##帖子浏览量查询
        select
            p.id,u.username,p.title,p.view as 'views'
        from bt_user u
                 left join bt_post p on u.id = p.user_id
        group by p.view desc;
    </select>
    <select id="selectLikeListAndPage" resultType="org.butu.model.vo.PostVO">
        ##关注帖子查询
        select
            p.id,p.title,p.user_id,p.comments,
            p.view,p.collects,p.top,p.essence,
            p.create_time ,p.modify_time ,
            u.username,u.alias, u.avatar
        from bt_post p
                 left join bt_user u on u.id = p.user_id
        where user_id in (
            select parent_id from bt_follow f
            where follower_id = #{id}
        )
    </select>
</mapper>
